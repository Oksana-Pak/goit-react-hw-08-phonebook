{"version":3,"file":"static/js/48.a06e3a4a.chunk.js","mappings":"kUAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kWAaVE,EAAcF,EAAAA,GAAAA,MAAH,mKAQXG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,ytBA6BXK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,0EAMXO,GAAeP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,2D,uUCzDZS,EAAYT,EAAAA,GAAAA,IAAH,8HAOTD,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6cAiBVU,EAAYV,EAAAA,GAAAA,EAAH,4LASTG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wzBAkCXQ,EAASR,EAAAA,GAAAA,OAAH,qmBAwBbW,EAAOX,EAAAA,GAAAA,IAAH,4UAUGY,GAAYZ,EAAAA,EAAAA,IAAOW,EAAPX,CAAH,wGAQTa,GAAab,EAAAA,EAAAA,IAAOW,EAAPX,CAAH,4FAMVc,GAAYd,EAAAA,EAAAA,IAAOW,EAAPX,CAAH,8GAQTe,GAAYf,EAAAA,EAAAA,IAAOW,EAAPX,CAAH,2FAMTgB,GAAYhB,EAAAA,EAAAA,IAAOW,EAAPX,CAAH,yG,6IClHhBiB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,OACAC,IAAI,EAAG,gDACPC,IAAI,GAAI,gDACRC,QACC,uJAEA,2CAEDC,SAAS,6BACZC,SAAUR,EAAAA,KAEPG,OACAC,IAAI,EAAG,gDACPC,IAAI,GAAI,gDAERE,SAAS,kCAERE,EAAgB,CACpBP,MAAO,GACPM,SAAU,IAGCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,8BACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBd,EAClBe,SAXa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAKK,UAKE,UAAC,KAAD,CAAYE,aAAa,MAAzB,WACE,SAAC,KAAD,uBACA,SAAC,KAAD,CAAaC,KAAK,QAAQC,KAAK,QAAQC,YAAY,WACnD,SAAC,KAAD,CAAaD,KAAK,QAAQE,UAAU,OACpC,SAAC,KAAD,CACEH,KAAK,WACLC,KAAK,WACLC,YAAY,cAEd,SAAC,KAAD,CAAaD,KAAK,WAAWE,UAAU,OACvC,SAAC,KAAD,CAAQH,KAAK,SAAb,0BAGJ,4BACE,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,WAKT,EC7ED,EAHc,WACZ,OAAO,SAACT,EAAD,GACR,C","sources":["components/ContactForm/ContactForm.styled.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { Button } from '../LoginForm/LoginForm.styled';\n\nexport const FormikForm = styled(Form)`\n  width: 50%;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 20px;\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n`;\n\nexport const FormikLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: #fff;\n  opacity: 0.7;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\nexport const FormikInput = styled(Field)`\n  width: 60%;\n  padding: 15px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n`;\nexport const FormikError = styled(ErrorMessage)`\n  font-weight: 700;\n  color: red;\n  margin: 0;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: 50%;\n  margin-top: 20px;\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  width: 25%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 55%;\n  left: 50%;\n`;\nexport const FormikForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 45px;\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    margin: 4px;\n  }\n`;\nexport const FormTitle = styled.p`\n  font-weight: 500;\n  color: #fff;\n  opacity: 0.7;\n  font-size: 24px;\n  margin-top: 0;\n  margin-bottom: 40px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\nexport const FormikInput = styled(Field)`\n  width: 85%;\n  margin: 15px auto;\n  padding: 15px;\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n  &::placeholder {\n    font-weight: 400;\n    color: #fff;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 15px auto 0;\n  width: 80%;\n  padding: 15px;\n  font-weight: 500;\n  font-size: 16px;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n`;\n\nconst Drop = styled.div`\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 10px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 10px 10px 60px -8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  transition: all 0.2s ease;\n`;\nexport const DropFirst = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  top: -20px;\n  left: -40px;\n  z-index: -1;\n`;\n\nexport const DropSecond = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  bottom: -30px;\n  right: -10px;\n`;\nexport const DropThird = styled(Drop)`\n  height: 100px;\n  width: 100px;\n  bottom: 120px;\n  right: -50px;\n  z-index: -1;\n`;\n\nexport const DropForth = styled(Drop)`\n  height: 120px;\n  width: 120px;\n  top: -60px;\n  right: -60px;\n`;\nexport const DropFifth = styled(Drop)`\n  height: 60px;\n  width: 60px;\n  bottom: 170px;\n  left: 90px;\n  z-index: -1;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  Container,\n  FormikForm,\n  FormTitle,\n  FormikInput,\n  Button,\n  DropFirst,\n  DropSecond,\n  DropThird,\n  DropForth,\n  DropFifth,\n} from './LoginForm.styled';\nimport { FormikError } from '../ContactForm/ContactForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .min(8, 'Too short email! Please, enter min 8 symbols')\n    .max(30, 'Too long email! Please, enter max 30 symbols')\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\n      'Email can only contain English letters.'\n    )\n    .required('email is a required field'),\n  password: yup\n    .string()\n    .trim()\n    .min(8, 'Too short email! Please, enter min 8 symbols')\n    .max(30, 'Too long email! Please, enter max 30 symbols')\n\n    .required('password is a required field'),\n});\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  return (\n    <section>\n      <Container>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <FormikForm autoComplete=\"off\">\n            <FormTitle>Welcome</FormTitle>\n            <FormikInput type=\"email\" name=\"email\" placeholder=\"Email\" />\n            <FormikError name=\"email\" component=\"p\" />\n            <FormikInput\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            <FormikError name=\"password\" component=\"p\" />\n            <Button type=\"submit\">Log In</Button>\n          </FormikForm>\n        </Formik>\n        <div>\n          <DropFirst></DropFirst>\n          <DropSecond></DropSecond>\n          <DropThird></DropThird>\n          <DropForth></DropForth>\n          <DropFifth></DropFifth>\n        </div>\n      </Container>\n    </section>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\nexport default Login;\n"],"names":["FormikForm","styled","Form","FormikLabel","FormikInput","Field","FormikError","ErrorMessage","ButtonStyled","Button","Container","FormTitle","Drop","DropFirst","DropSecond","DropThird","DropForth","DropFifth","schema","yup","shape","email","trim","min","max","matches","required","password","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","logIn","autoComplete","type","name","placeholder","component"],"sourceRoot":""}