{"version":3,"file":"static/js/737.d00ea0f6.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n`;\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 45px;\n  height: 320px;\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    margin: 4px;\n  }\n`;\nexport const FormTitle = styled.p`\n  font-weight: 500;\n  color: #fff;\n  opacity: 0.7;\n  font-size: 24px;\n  margin-top: 0;\n  margin-bottom: 60px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\nexport const Input = styled.input`\n  width: 200px;\n  padding: 15px;\n  margin-bottom: 35px;\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n  &::placeholder {\n    font-weight: 400;\n    color: #fff;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  width: 200px;\n  padding: 15px;\n  font-weight: 500;\n  font-size: 16px;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n`;\nconst Drop = styled.div`\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 10px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 10px 10px 60px -8px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  transition: all 0.2s ease;\n`;\nexport const DropFirst = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  top: -20px;\n  left: -40px;\n  z-index: -1;\n`;\n\nexport const DropSecond = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  bottom: -30px;\n  right: -10px;\n`;\nexport const DropThird = styled(Drop)`\n  height: 100px;\n  width: 100px;\n  bottom: 120px;\n  right: -50px;\n  z-index: -1;\n`;\n\nexport const DropForth = styled(Drop)`\n  height: 120px;\n  width: 120px;\n  top: -60px;\n  right: -60px;\n`;\nexport const DropFifth = styled(Drop)`\n  height: 60px;\n  width: 60px;\n  bottom: 170px;\n  left: 90px;\n  z-index: -1;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { Button } from '../LoginForm/LoginForm.styled';\n\nexport const FormikForm = styled(Form)`\n  width: 50%;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 20px;\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n`;\n\nexport const FormikLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: #fff;\n  opacity: 0.7;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\nexport const FormikInput = styled(Field)`\n  width: 60%;\n  padding: 15px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n`;\nexport const FormikError = styled(ErrorMessage)`\n  font-weight: 700;\n  color: red;\n  margin: 0;\n`;\n\nexport const FormikButton = styled(Button)`\n  margin-top: 20px;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  errorMessage,\n  successMessage,\n} from 'components/services/notifications';\n\nimport {\n  FormikForm,\n  FormikLabel,\n  FormikInput,\n  FormikError,\n  FormikButton,\n} from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan'\n    )\n    .required('name is a required field'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('number is a required field'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const checkContact = name => contacts.find(contact => name === contact.name);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (checkContact(values.name)) {\n      errorMessage(`Sorry, the contact ${values.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(values));\n    successMessage(`${values.name} is added to contacts`);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormikForm>\n        <FormikLabel htmlFor=\"name\">\n          Name\n          <FormikInput type=\"text\" name=\"name\" />\n          <FormikError name=\"name\" component=\"p\" />\n        </FormikLabel>\n        <FormikLabel htmlFor=\"number\">\n          Number\n          <FormikInput type=\"tel\" name=\"number\" />\n          <FormikError name=\"number\" component=\"p\" />\n        </FormikLabel>\n        <FormikButton type=\"submit\">Add contact</FormikButton>\n      </FormikForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from '../LoginForm/LoginForm.styled';\nexport const Form = styled.form`\n  width: 50%;\n  height: 80px;\n  margin: 0 auto;\n  padding: 15px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  opacity: 0.7;\n  gap: 5px;\n`;\n\nexport const InputStyled = styled(Input)`\n  position: relative;\n  width: 60%;\n  margin: 0 auto;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label } from './Filter.styled';\nimport { Form, InputStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const changeFilter = value => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Form>\n      <Label htmlFor=\"filter\">\n        Find contact by name\n        <InputStyled\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => changeFilter(e.target.value)}\n        />\n      </Label>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from '../LoginForm/LoginForm.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 15px;\n\n  color: #ffffff;\n  opacity: 0.8;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: 100px;\n  margin: 0;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { successMessage } from 'components/services/notifications';\nimport { Item, ButtonStyled } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    successMessage(`${name} was delete from contacts`);\n  };\n\n  return (\n    <Item>\n      <p>{name}</p>\n      <p>{number}</p>\n      <ButtonStyled onClick={handleDelete}>Delete</ButtonStyled>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.ul`\n  width: 50%;\n  margin: 15px auto 0;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from '../ContactItem';\nimport { ContactContainer } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactContainer>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n    </ContactContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  max-width: 50%;\n  margin: 0 auto;\n  padding: 20px;\n`;\nexport const ContactTitle = styled.h3`\n  font-size: 26px;\n  text-align: center;\n  opacity: 0.7;\n  margin: 0 auto 40px;\n`;\nexport const ContactSubtitle = styled.h4`\n  font-size: 20px;\n  text-align: center;\n  opacity: 0.7;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport {\n  Container,\n  ContactTitle,\n  ContactSubtitle,\n} from './ContactsPage.styled';\nimport { Loader } from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactTitle>Phone Book</ContactTitle>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      {contacts.length > 0 && (\n        <>\n          <ContactSubtitle>Contacts</ContactSubtitle>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["Container","styled","Form","FormTitle","Input","Button","Drop","DropFirst","DropSecond","DropThird","DropForth","DropFifth","selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContacts","name","toLowerCase","includes","selectIsLoading","isLoading","selectError","error","FormikForm","FormikLabel","FormikInput","Field","FormikError","ErrorMessage","FormikButton","schema","yup","shape","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","resetForm","find","contact","errorMessage","addContact","successMessage","htmlFor","type","component","Label","InputStyled","Filter","value","onChange","e","setFilter","changeFilter","target","Item","ButtonStyled","ContactItem","id","onClick","deleteContact","ContactContainer","ContactList","length","map","ContactTitle","ContactSubtitle","useEffect","fetchContacts","Loader"],"sourceRoot":""}